EDGE_df <- aggregate(source2[,'Region'=='E'],by=source2$Family,FUN="mean")
EDGE_df <- aggregate(source2[,'Region'=='E'],by=list(source2$Family),FUN="mean")
View(EDGE_df)
EDGE_df <- aggregate(source2['Region'=='E'],by=list(source2$Family),FUN="mean")
EDGE_df <- aggregate(source2,by=list(source2$Family),FUN="mean")
View(EDGE_df)
EDGE_df <- aggregate(source2[which(source2$Region=="E"),],by=list(source2$Family),FUN="mean")
EDGE_df <- aggregate(source2[which(source2$Region="E"),],by=list(source2$Family),FUN="mean")
EDGE_df <- aggregate(source2[which(source2$Region==E),],by=list(source2$Family),FUN="mean")
EDGE_df <- aggregate(source2[which(source2$Region=="E"),],by=list(source2$Family),FUN="mean")
EDGE_df <- aggregate(source2[which(source2$Region=="E")],by=list(source2$Family),FUN="mean")
EDGE_df <- aggregate(source2[Region=="E"],by=list(source2$Family),FUN="mean")
EDGE_df <- aggregate(source2[source2$Region=="E"],by=list(source2$Family),FUN="mean")
EDGE = source2[which(source2$Region=="E"),]
EDGE_df <- aggregate(EDGE,by=list(EDGE$Family),FUN="mean")
View(EDGE_df)
summary(EDGE_df)
str(EDGE_df)
EDGE_df2 <- EDGE_df %in% annot
str(EDGE_df2)
EDGE_df2 <- annot %in% EDGE_df
EDGE_df2 <- EDGE_df %in% annot
annot
EDGE_df2 <- EDGE_df$Family %in% annot$V1
EDGE_df2 <- annot$V1 %in% EDGE_df$Family
EDGE_df2
EDGE_df$Family
EDGE_df$Family = unique(EDGE$Family)
EDGE_df2 <- annot$V1 %in% EDGE_df$Family
EDGE_df2
EDGE_df2 <- EDGEdf[which(annot$V1 %in% EDGE_df$Family),]
EDGE_df2 <- EDGE_df[which(annot$V1 %in% EDGE_df$Family),]
View(EDGE_df2)
EDGE_df3 = EDGE_df2[,c(4,10,24,25,28-46)]
EDGE_df3 = EDGE_df2[,c(4,10,24,25,28:46)]
summary(EDGE_df3)
EDGE_df4 = merge(Ht_EDGE_VTMDNC_BLUPs,EDGE_df3)
View(EDGE_df4)
dim(Ht_EDGE_VTMDNC_BLUPs)
head(Ht_EDGE_VTMDNC_BLUPs)
EDGE_df4 = merge(Ht_EDGE_VTMDNC_BLUPs,EDGE_df3, by.x="Ind",by.y="Family")
View(EDGE_df4)
Ht_EDGE_VTMDNC_BLUPs <- Ht_ALL_VTMDNC_BLUPs[which(EDGE$V1 %in% Ht_ALL_VTMDNC_BLUPs$Ind==TRUE),]
head(Ht_EDGE_VTMDNC_BLUPs)
EDGE <- read.table("EDGE.annot")
str(EDGE)
Ht_EDGE_VTMDNC_BLUPs <- Ht_ALL_VTMDNC_BLUPs[which(EDGE$V1 %in% Ht_ALL_VTMDNC_BLUPs$Ind==TRUE),]
head(Ht_EDGE_VTMDNC_BLUPs)
EDGE2 = source2[which(source2$Region=="E"),]
EDGE_df <- aggregate(EDGE2,by=list(EDGE$Family),FUN="mean")
EDGE_df$Family = unique(EDGE$Family)
EDGE_df2 <- EDGE_df[which(annot$V1 %in% EDGE_df$Family),]
EDGE_df3 = EDGE_df2[,c(4,10,24,25,28:46)]
EDGE_df4 = merge(Ht_EDGE_VTMDNC_BLUPs,EDGE_df3, by.x="Ind",by.y="Family")
dim(Ht_EDGE_VTMDNC_BLUPs)
Ht_EDGE_VTMDNC_BLUPs
View(Ht_EDGE_VTMDNC_BLUPs)
str(EDGE)
Ht_EDGE_VTMDNC_BLUPs <- Ht_ALL_VTMDNC_BLUPs[which(EDGE$V1 %in% Ht_ALL_VTMDNC_BLUPs$Ind==TRUE),]
Ht_ALL_VTMDNC_BLUPs$Ind = rownames(Ht_ALL_VTMDNC_BLUPs)
Ht_ALL_VTMDNC_BLUPs$Ind
EDGE
Ht_EDGE_VTMDNC_BLUPs <- Ht_ALL_VTMDNC_BLUPs[which(EDGE$V1 %in% as.factor(Ht_ALL_VTMDNC_BLUPs$Ind)==TRUE),]
head(Ht_EDGE_VTMDNC_BLUPs)
Ht_EDGE_VTMDNC_BLUPs
Ht_EDGE_VTMDNC_BLUPs <- Ht_ALL_VTMDNC_BLUPs[which(as.factor(Ht_ALL_VTMDNC_BLUPs$Ind) %in% EDGE$V1==TRUE),]
head(Ht_EDGE_VTMDNC_BLUPs)
Ht_EDGE_VTMDNC_BLUPs
write.table(Ht_EDGE_VTMDNC_BLUPs,"Ht_EDGE_VTMDNC.blups",row.names = F,col.names = F,quote = F)
EDGE2 = source2[which(source2$Region=="E"),]
EDGE_df <- aggregate(EDGE2,by=list(EDGE$Family),FUN="mean")
EDGE_df$Family = unique(EDGE$Family)
EDGE_df2 <- EDGE_df[which(annot$V1 %in% EDGE_df$Family),]
EDGE_df3 = EDGE_df2[,c(4,10,24,25,28:46)]
EDGE_df4 = merge(Ht_EDGE_VTMDNC_BLUPs,EDGE_df3, by.x="Ind",by.y="Family")
EDGE_df <- aggregate(EDGE2,by=list(EDGE2$Family),FUN="mean")
EDGE_df$Family = unique(EDGE2$Family)
EDGE_df2 <- EDGE_df[which(annot$V1 %in% EDGE_df$Family),]
EDGE_df3 = EDGE_df2[,c(4,10,24,25,28:46)]
EDGE_df4 = merge(Ht_EDGE_VTMDNC_BLUPs,EDGE_df3, by.x="Ind",by.y="Family")
View(EDGE_df4)
EDGE2
EDGE2[,1]
EDGE2[,2]
EDGE2[,2]
str(EDGE@)
str(EDGE2)
EDGE2[,3]
EDGE2 = droplevels(source2[which(source2$Region=="E"),])
EDGE2[,3]
EDGE_df <- aggregate(EDGE2,by=list(EDGE2$Family),FUN="mean")
EDGE_df$Family = unique(EDGE2$Family)
EDGE_df2 <- EDGE_df[which(annot$V1 %in% EDGE_df$Family),]
EDGE_df3 = EDGE_df2[,c(4,10,24,25,28:46)]
EDGE_df4 = merge(Ht_EDGE_VTMDNC_BLUPs,EDGE_df3, by.x="Ind",by.y="Family")
View(EDGE_df)
EDGE_df$Family
EDGE_df2 <- EDGE_df[which(EDGE$V1 %in% EDGE_df$Family),]
EDGE_df3 = EDGE_df2[,c(4,10,24,25,28:46)]
EDGE_df4 = merge(Ht_EDGE_VTMDNC_BLUPs,EDGE_df3, by.x="Ind",by.y="Family")
View(EDGE_df3)
View(EDGE_df)
EDGE_df <- aggregate(EDGE2,by=list(EDGE2$Family),FUN="mean")
View(EDGE_df)
EDGE_df2 <- EDGE_df[which(EDGE$V1 %in% EDGE_df$Group.1),]
View(EDGE_df2)
EDGE_df2 <- EDGE_df[which(EDGE_df$Group.1 %in% EDGE$V1),]
View(EDGE_df2)
EDGE_df3 = EDGE_df2[,c(4,10,24,25,28:46)]
EDGE_df4 = merge(Ht_EDGE_VTMDNC_BLUPs,EDGE_df3, by.x="Ind",by.y="Family")
View(EDGE_df3)
EDGE_df3 = EDGE_df2[,c(1,10,24,25,28:46)]
View(EDGE_df3)
pairs(EDGEdf3[,2:23])
pairs(EDGE_df3[,2:23])
pairs(EDGE_df3[,2:10])
View(EDGE_df2)
EDGE_df3 = EDGE_df2[,c(1,10,24,25,32,45)]
pairs(EDGE_df3[,2:10])
pairs(EDGE_df3[,])
Ht_EDGE_VTMDNC_BLUPs
EDGE_df4 = cbind(EDGE_df3,Ht_EDGE_VTMDNC_BLUPs[,1])
View(EDGE_df4)
pairs(EDGE_df3[,])
pairs(EDGE_df4[,])
write.table(EDGE_df3,"Bioclim_EDGE.blups",row.names = F,col.names = T,quote = F)
Ht_ALL_VTMDNC <- lmer(data = source2, Height_Fall2019 ~ Garden + initial_ht + (1|mBed) + (1|Family) )
ranef(Ht_ALL_VTMDNC)
Ht_ALL_VTMDNC_BLUPs <- ranef(Ht_ALL_VTMDNC)$Family
Ht_ALL_VTMDNC_BLUPs$Ind = rownames(Ht_ALL_VTMDNC_BLUPs)
EDGE <- read.table("EDGE.annot")
str(EDGE)
Ht_EDGE_VTMDNC_BLUPs <- Ht_ALL_VTMDNC_BLUPs[which(as.factor(Ht_ALL_VTMDNC_BLUPs$Ind) %in% EDGE$V1==TRUE),]
head(Ht_EDGE_VTMDNC_BLUPs)
summary(Ht_EDGE_VTMDNC_BLUPs)
hist(Ht_EDGE_VTMDNC_BLUPs)
hist(Ht_EDGE_VTMDNC_BLUPs[,1])
coef(Ht_ALL_VTMDNC)
ranef(Ht_ALL_VTMDNC)
Ht_ALL_VTMDNC <- lmer(data = source2, Height_Fall2019 ~ Garden + initial_ht + (1|mBed) + (1|Family) )
ranef(Ht_ALL_VTMDNC)
Ht_ALL_VTMDNC <- lmer(data = source2, Height_Fall2019 ~ Garden + initial_ht + (1|mBed) + (Garden|Family) )
ranef(Ht_ALL_VTMDNC)
Ht_ALL_VTMDNC <- lmer(data = source2, Height_Fall2019 ~ Garden + initial_ht + (1|mBed) + (1+Garden|Family) )
ranef(Ht_ALL_VTMDNC)
Ht_ALL_VTMDNC <- lmer(data = source2, Height_Fall2019 ~ Garden + initial_ht + (1|mBed) + (1+Garden|Family) )
Ht_ALL_VTMDNC <- lmer(data = source2, Height_Fall2019 ~ Garden + initial_ht + (1|mBed) + (1+Garden|Family) )
Ht_ALL_VTMDNC <- lmer(data = source2, Height_Fall2019 ~ Garden + initial_ht + (1|mBed) + (1+Garden|Family) )
Ht_ALL_VTMDNC <- lmer(data = source2, Height_Fall2019 ~ Garden + initial_ht + (1|mBed) + (Garden|Family) )
Ht_ALL_VTMDNC <- lmer(data = source2, Height_Fall2019 ~ Garden + initial_ht + (1|mBed) + (1|Family) )
Ht_ALL_VTMDNC <- lmer(data = source2, Height_Fall2019 ~ Garden + initial_ht + (1|mBed) + (Garden|Family) )
Ht_ALL_VTMDNC <- lmer(data = source2, Height_Fall2019 ~ Garden + initial_ht + (1|mBed) + (Garden|Population) )
Ht_ALL_VTMDNC <- lmer(data = source2, Height_Fall2019 ~ Garden + initial_ht + (1|mBed) + (Garden|Family) )
Ht_ALL_VTMDNC <- lmer(data = source2, Height_Fall2019 ~ Garden + initial_ht + (1|mBed) + (1|Family) )
ranef(Ht_ALL_VTMDNC)
Ht_ALL_VTMDNC_BLUPs <- ranef(Ht_ALL_VTMDNC)$Family
Ht_ALL_VTMDNC_BLUPs$Ind = rownames(Ht_ALL_VTMDNC_BLUPs)
EDGE <- read.table("EDGE.annot")
str(EDGE)
Ht_EDGE_VTMDNC_BLUPs <- Ht_ALL_VTMDNC_BLUPs[which(as.factor(Ht_ALL_VTMDNC_BLUPs$Ind) %in% EDGE$V1==TRUE),]
head(Ht_EDGE_VTMDNC_BLUPs)
summary(Ht_EDGE_VTMDNC_BLUPs)
write.table(Ht_EDGE_VTMDNC_BLUPs,"Ht_EDGE_VTMDNC.blups",row.names = F,col.names = F,quote = F)
write.table(EDGE_df3,"Bioclim_EDGE.blups",row.names = F,col.names = T,quote = F)
head(PCA)
getwd()
setwd("~/Downloads")
write.table(PCA[,c(1)],"EDGE_PC1.txt",quote = F,row.names = F,col.names = F)
write.table(PCA[,c(2)],"EDGE_PC2.txt",quote = F,row.names = F,col.names = F)
Ht_ALL_VTMDNC2 <- lmer(data = source2[which(source2$Garden=="MD")], Height_Fall2019 ~ initial_ht + (1|mBed) + (1|Family) )
Ht_ALL_VTMDNC2 <- lmer(data = source2[which(source2$Garden=="MD"),], Height_Fall2019 ~ initial_ht + (1|mBed) + (1|Family) )
Ht_ALL_MD <- lmer(data = source2[which(source2$Garden=="MD"),], Height_Fall2019 ~ initial_ht + (1|mBed) + (1|Family) )
ranef(Ht_ALL_MD)
Ht_ALL_NC <- lmer(data = source2[which(source2$Garden=="NC"),], Height_Fall2019 ~ initial_ht + (1|mBed) + (1|Family) )
ranef(Ht_ALL_MD)
ranef(Ht_ALL_NC)
Ht_ALL_MD_BLUPs <- ranef(Ht_ALL_MD)$Family
Ht_ALL_MD_BLUPs$Ind = rownames(Ht_ALL_MD_BLUPs)
Ht_ALL_NC_BLUPs <- ranef(Ht_ALL_NC)$Family
Ht_ALL_NC_BLUPs$Ind = rownames(Ht_ALL_NC_BLUPs)
Ht_EDGE_MD_BLUPs <- Ht_ALL_MD_BLUPs[which(as.factor(Ht_ALL_MD_BLUPs$Ind) %in% EDGE$V1==TRUE),]
Ht_EDGE_NC_BLUPs <- Ht_ALL_NC_BLUPs[which(as.factor(Ht_ALL_NC_BLUPs$Ind) %in% EDGE$V1==TRUE),]
setwd("~/OneDrive - University of Vermont/spruce/CASRI/TD_calc/")  #  Set your wd as appropriate
write.table(Ht_EDGE_MD_BLUPs,"Ht_EDGE_MD.blups",row.names = F,col.names = F,quote = F)
write.table(Ht_EDGE_NC_BLUPs,"Ht_EDGE_NC.blups",row.names = F,col.names = F,quote = F)
head(Ht_EDGE_VTMDNC_BLUPs)
write.table(Ht_EDGE_VTMDNC_BLUPs[,1],"Ht_EDGE_VTMDNC.blups",row.names = F,col.names = F,quote = F)
write.table(Ht_EDGE_MD_BLUPs[,1],"Ht_EDGE_MD.blups",row.names = F,col.names = F,quote = F)
write.table(Ht_EDGE_NC_BLUPs[,1],"Ht_EDGE_NC.blups",row.names = F,col.names = F,quote = F)
plot(Ht_EDGE_MD_BLUPs[,1],Ht_EDGE_NC_BLUPs[,1])
abline(-3,7)
plot(Ht_EDGE_MD_BLUPs[,1],Ht_EDGE_NC_BLUPs[,1])
abline(0,1)
plot(Ht_EDGE_MD_BLUPs[,1],Ht_EDGE_NC_BLUPs[,1])
cor.test(Ht_EDGE_MD_BLUPs[,1],Ht_EDGE_NC_BLUPs[,1])
setwd("~/Downloads")
list.files()
dat <- read.table("AB.thetas.idx.pestPG")
colnames(dat) = c("window","chrname", "wincenter", "tW", "tP", "tF", "tH", "tL", "tajD", "fulif", "fuliD", "fayH", "zengsE", "numSites")
dat[which(dat$chrname=="chloroplast"),]
dat$tWsite = dat$tW/dat$numSites
dat$tPsite = dat$tP/dat$numSites
dat$diff = dat$tPsite-dat$tWsite
dat$Ne = dat$tPsite/(4*2E-9)
par(mfrow=c(2,2))
hist(dat$tWsite)
hist(dat$tPsite)
plot(dat$tPsite,dat$tWsite)
#hist(dat$diff)
#hist(dat$Ne)
hist(dat$tajD)
list.files()
dat2 <- read.table("AB_allsites.sfs")
par(mfrow=c(2,2))
hist(dat$tWsite)
hist(dat$tPsite)
plot(dat2)
#hist(dat$diff)
#hist(dat$Ne)
hist(dat$tajD)
par(mfrow=c(2,2))
hist(dat$tWsite)
hist(dat$tPsite)
plot(dat2)
#hist(dat$diff)
#hist(dat$Ne)
hist(dat$tajD)
dev.off()
par(mfrow=c(2,2))
hist(dat$tWsite)
hist(dat$tPsite)
plot(dat2)
dat2
plot(dat2[1:11])
barplot(dat2[1:11])
dat2b = transpose(dat2)
barplot(dat2b[1:11])
dat2b
dat2 <- read.table("AB_allsites.sfs", header=F)
dat2b = transpose(dat2)
par(mfrow=c(2,2))
hist(dat$tWsite)
hist(dat$tPsite)
barplot(dat2b[1:11])
#hist(dat$diff)
#hist(dat$Ne)
hist(dat$tajD)
par(mfrow=c(2,2))
hist(dat$tWsite)
hist(dat$tPsite)
barplot(dat2b)
#hist(dat$diff)
#hist(dat$Ne)
hist(dat$tajD)
dat2 <- as.vector(dat2)
par(mfrow=c(2,2))
hist(dat$tWsite)
hist(dat$tPsite)
barplot(dat2b)
#hist(dat$diff)
#hist(dat$Ne)
hist(dat$tajD)
par(mfrow=c(2,2))
hist(dat$tWsite)
hist(dat$tPsite)
barplot(dat2)
#hist(dat$diff)
#hist(dat$Ne)
hist(dat$tajD)
summary(dat2)
dat2 <- reshape(dat2)
dat2 <- read.table("AB_allsites.sfs", header=F)
dat2
barplot(dat2[1,1:11])
s<-scan('AB_allsites.sfs')
s<-s[-c(1,length(s))]
s<-s/sum(s)
barplot(s,names=1:length(s),main='SFS'
)
?scan
dev.off()
sfs<-scan('AB_allsites.sfs')
sfs<-sfs[-c(1,length(sfs))]
sfs<-sfs/sum(sfs)
barplot(sfs,names=1:length(sfs),main='SFS')
sfs<-scan('AB_allsites.sfs')
#sfs<-sfs[-c(1,length(sfs))]
sfs<-sfs/sum(sfs)
barplot(sfs,names=1:length(sfs),main='SFS')
sfs<-scan('AB_allsites.sfs')
sfs<-sfs[-c(1,length(sfs))]
sfs<-sfs/sum(sfs)
barplot(sfs,names=1:length(sfs),main='SFS')
sfs<-scan('AB_allsites.sfs')
sfs<-sfs[c(2,length(sfs))]
sfs<-sfs/sum(sfs)
barplot(sfs,names=1:length(sfs),main='SFS')
sfs<-scan('AB_allsites.sfs')
sfs<-sfs[-c(2,length(sfs))]
sfs<-sfs/sum(sfs)
barplot(sfs,names=1:length(sfs),main='SFS')
sfs<-scan('AB_allsites.sfs')
sfs<-sfs[-c(3,length(sfs))]
sfs<-sfs/sum(sfs)
barplot(sfs,names=1:length(sfs),main='SFS')
sfs<-scan('AB_allsites.sfs')
sfs<-sfs[-c(1,length(sfs))]
sfs<-sfs/sum(sfs)
barplot(sfs,names=1:length(sfs),main='SFS')
sfs<-scan('AB_allsites.sfs')
sfs<-sfs[-c(1,length(sfs))]
sfs
plot(PCA[,1],PCA[,2], xlim=c(-.1,.1),ylim=c(-.1,.1),col="lightgray")
text(PCA[,1], PCA[,2],  annot$V2,
cex=0.65, pos=3,col="red")
?pchisq
setwd("~/Documents/GitHub/Ecological_Genomics/Spring_2020/myresults/")
list.files()
SFS <- scan("AB_outFold.sfs")
SFS
sumSFS <- sum(SFS)
sumSFS
pctPoly = 1-(SFS[1]/sumSFS)
pctPoly
pctPoly = 100*(1-(SFS[1]/sumSFS))
pctPoly
plot(SFS[-c(1,length(SFS))]
)
SFS[-c(1,length(SFS))]
barplot(plotSFS)
plotSFS <- SFS[-c(1,length(SFS))]
barplot(plotSFS)
barplot(plotSFS)
list.files()
div <- read.table("AB_folded_allsites.thetas.idx.pestPG", header=T)
str(div)
div <- read.table("AB_folded_allsites.thetas.idx.pestPG")
str(div)
head(div)
colnames(div) = c("window","chrname", "wincenter", "tW", "tP", "tF", "tH", "tL",
"tajD", "fulif", "fuliD", "fayH", "zengsE", "numSites")
div$tWpersite = div$tW/div$numSites
div$tPpersite = div$tP/div$numSites
str(div)
hist(div$tWpersite, col="gray",xlab="Theta-W")
hist(div$tWpersite, col="gray",xlab="Theta-W")
hist(div$tWpersite, col="gray",xlab="Theta-W", main="")
hist(div$tPWpersite, col="gray",xlab="Theta-Pi", main="")
hist(div$tPpersite, col="gray",xlab="Theta-Pi", main="")
hist(div$tajD, col="gray",xlab="Tajima's D", main="")
par(mfrow=c(2,2))
hist(div$tWpersite, col="gray",xlab="Theta-W", main="")
hist(div$tPpersite, col="gray",xlab="Theta-Pi", main="")
hist(div$tajD, col="gray",xlab="Tajima's D", main="")
barplot(plotSFS)
par(mfrow=c(2,2))
hist(div$tWpersite, col="gray",xlab="Theta-W", main="")
hist(div$tPpersite, col="gray",xlab="Theta-Pi", main="")
hist(div$tajD, col="gray",xlab="Tajima's D", main="")
barplot(plotSFS)
pdf("AB_diversity_stats.pdf")
par(mfrow=c(2,2))
hist(div$tWpersite, col="gray",xlab="Theta-W", main="")
hist(div$tPpersite, col="gray",xlab="Theta-Pi", main="")
hist(div$tajD, col="gray",xlab="Tajima's D", main="")
barplot(plotSFS)
dev.off()
summary(div)
knitr::opts_chunk$set(echo = TRUE)
library("tidyverse")
library(plyr)
library(knitr)
library(kableExtra)
library(EnvStats)
library(MuMIn)
library(nlme)
library(lmerTest)
library(MCMCglmm)
library(reshape)
install.packages("reshape")
library(reshape)
# read in data
rel=read.csv("/Volumes/kellrlab/datashare/Spruce/ColdTolerance/EL_10052017/EL_Test_10052017_FINAL.csv", header=TRUE)
# get rid of 2 seedlings
rel=na.omit(rel)
# change temps to numerical values (NO C, +)
rel[,2]=c(rep(4, 119), rep (-3, 119), rep(-6, 120), rep(-9, 120), rep(-12, 120), rep(-15, 120))
# calculate RT (conductivity at temp t / conductivity after heat kill for temp t)
rel$rt=(rel$Conductivity.Before.Heat.Kill/rel$Conductivity.After.Heat.Kill)
head(rel)
# import the sample id data to merge to rel data
ids=read.csv("/Volumes/kellrlab/datashare/Spruce/ColdTolerance/EL_10052017/sample_ids.csv", header=TRUE)
# remove br-m-5: see note below
# remove an additional 6 seedlings
ids <- ids[ids[,1]!=57,]
rel=merge(x=rel, y=ids, by.x="Sample.Number", by.y="REL_Num")
rel$mom=paste(rel$Mountain, rel$Elevation, rel$Tree_Num, sep="_")
rel=rel[,c(1,2,5,10)]
# call in the family data that was updated in budset_basic
# brh1 elevation is missing (changed to bogus value), but no cold tolerance information for that family
family=read.csv("/Volumes/kellrlab/datashare/Spruce/trait_analyses/picea_gbs_seedFamilyElevations.csv", header = TRUE)
family=family[,-1]
rel=merge(rel, family, by="mom")
# add the pca values for those seedlings sequenced
md_pcs_withOutliers=read.csv("/Volumes/kellrlab/datashare/Spruce/SNP_analyses/PCA/picea_gbs_pcs_withPC1outliers.csv")
md_pcs_withOutliers=md_pcs_withOutliers[,-1]
moms=md_pcs_withOutliers %>%
filter(cohort=="MaternalTree") %>%
select(sampleID, pc1_withPC1outliers, pc2_withPC1outliers)
install.packages("EnvStats")
library(EnvStats)
install.packages("kableExtra")
library(kableExtra)
# add the pca values for those seedlings sequenced
md_pcs_withOutliers=read.csv("/Volumes/kellrlab/datashare/Spruce/SNP_analyses/PCA/picea_gbs_pcs_withPC1outliers.csv")
md_pcs_withOutliers=md_pcs_withOutliers[,-1]
moms=md_pcs_withOutliers %>%
filter(cohort=="MaternalTree") %>%
select(sampleID, pc1_withPC1outliers, pc2_withPC1outliers)
library(tidyverse)
# add the pca values for those seedlings sequenced
md_pcs_withOutliers=read.csv("/Volumes/kellrlab/datashare/Spruce/SNP_analyses/PCA/picea_gbs_pcs_withPC1outliers.csv")
md_pcs_withOutliers=md_pcs_withOutliers[,-1]
moms=md_pcs_withOutliers %>%
filter(cohort=="MaternalTree") %>%
select(sampleID, pc1_withPC1outliers, pc2_withPC1outliers)
library(plyr)
library(knitr)
library(kableExtra)
library(EnvStats)
library(MuMIn)
library(nlme)
library(lmerTest)
library(MCMCglmm)
library(reshape)
# add the pca values for those seedlings sequenced
md_pcs_withOutliers=read.csv("/Volumes/kellrlab/datashare/Spruce/SNP_analyses/PCA/picea_gbs_pcs_withPC1outliers.csv")
md_pcs_withOutliers=md_pcs_withOutliers[,-1]
moms=md_pcs_withOutliers %>%
filter(cohort=="MaternalTree") %>%
select(sampleID, pc1_withPC1outliers, pc2_withPC1outliers)
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
install.packages(tidyverse)
install.packages("tidyverse")
install.packages("tidyverse")
library(plyr)
library(knitr)
library(kableExtra)
library(EnvStats)
library(MuMIn)
library(nlme)
library(lmerTest)
library(MCMCglmm)
library(reshape)
# read in data
rel=read.csv("/Volumes/kellrlab/datashare/Spruce/ColdTolerance/EL_10052017/EL_Test_10052017_FINAL.csv", header=TRUE)
# get rid of 2 seedlings
rel=na.omit(rel)
# change temps to numerical values (NO C, +)
rel[,2]=c(rep(4, 119), rep (-3, 119), rep(-6, 120), rep(-9, 120), rep(-12, 120), rep(-15, 120))
# calculate RT (conductivity at temp t / conductivity after heat kill for temp t)
rel$rt=(rel$Conductivity.Before.Heat.Kill/rel$Conductivity.After.Heat.Kill)
head(rel)
# import the sample id data to merge to rel data
ids=read.csv("/Volumes/kellrlab/datashare/Spruce/ColdTolerance/EL_10052017/sample_ids.csv", header=TRUE)
# remove br-m-5: see note below
# remove an additional 6 seedlings
ids <- ids[ids[,1]!=57,]
rel=merge(x=rel, y=ids, by.x="Sample.Number", by.y="REL_Num")
rel$mom=paste(rel$Mountain, rel$Elevation, rel$Tree_Num, sep="_")
rel=rel[,c(1,2,5,10)]
# call in the family data that was updated in budset_basic
# brh1 elevation is missing (changed to bogus value), but no cold tolerance information for that family
family=read.csv("/Volumes/kellrlab/datashare/Spruce/trait_analyses/picea_gbs_seedFamilyElevations.csv", header = TRUE)
family=family[,-1]
rel=merge(rel, family, by="mom")
# add the pca values for those seedlings sequenced
md_pcs_withOutliers=read.csv("/Volumes/kellrlab/datashare/Spruce/SNP_analyses/PCA/picea_gbs_pcs_withPC1outliers.csv")
md_pcs_withOutliers=md_pcs_withOutliers[,-1]
moms=md_pcs_withOutliers %>%
filter(cohort=="MaternalTree") %>%
select(sampleID, pc1_withPC1outliers, pc2_withPC1outliers)
?filter
moms=md_pcs_withOutliers %>%
filter(cohort=="MaternalTree") %>%
select(sampleID, pc1_withPC1outliers, pc2_withPC1outliers)
names(md_pcs_withOutliers)
moms=md_pcs_withOutliers %>% filter(cohort=="MaternalTree") %>%
select(sampleID, pc1_withPC1outliers, pc2_withPC1outliers)
str(md_pcs_withOutliers)
moms=md_pcs_withOutliers %>%
filter(cohort == "MaternalTree") %>%
select(sampleID, pc1_withPC1outliers, pc2_withPC1outliers)
moms = md_pcs_withOutliers %>%
filter(cohort == "MaternalTree") %>%
select(sampleID, pc1_withPC1outliers, pc2_withPC1outliers)
library(tidyverse)
library(plyr)
library(knitr)
library(kableExtra)
library(EnvStats)
library(MuMIn)
library(nlme)
library(lmerTest)
library(MCMCglmm)
library(reshape)
